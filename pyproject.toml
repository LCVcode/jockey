[tool.poetry]
name = "jockey"
version = "0.1.0"
description = "A CLI tool designed to facilitate quick and easy retrieval of Juju objects using filters."
readme = "README.md"
authors = [
    "Connor Chamberlain <connor.chamberlain@canonical.com>",
    "Pedro Castillo <pedro.castillo@canonical.com>"
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: POSIX :: Linux",
]

packages = [
    { include = "jockey", from = "src" }
]

[tool.poetry.scripts]
jockey = "jockey.__main__:main"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
black = "^24.3.0"
mypy = "^0.991"
flake8 = "^6.0.0"
Flake8-pyproject = "^1.2.3"
flake8-bugbear = "^24.4.26"
pytest = "^8.0.0"
coverage = "^7.0.0"
pytest-cov = "^5.0.0"
poetry-pyinstaller-plugin = "^1.1.15"

[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]

[tool.black]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
    \.pytest_cache
  | \.git
  | \.mypy_cache
)
'''

[tool.isort]
profile = 'black'
line_length = 120
star_first = true
group_by_package = true
force_sort_within_sections = true
lines_after_imports = 2
honor_noqa = true
atomic = true
ignore_comments = false
skip_gitignore = true
src_paths = ['src', 'tests']

[tool.flake8]
max-line-length = 120
max-complexity = 18
count = true
show-source = true
statistics = true
disable-noqa = false
enable-extensions = [
    'G', # flake8-logging-format
]
extend-exclude = [
    '.github',
    '.Python',
    '.*.pyc',
    '.*.pyo',
    '.*.pyd',
    '.*.py.class',
    '*.egg-info',
    'venv*',
    '.venv*',
    '.*_cache',
    'lib',
    'lib64',
    '.*.so',
    'build',
    'dist',
    'sdist',
    'wheels',
]

[tool.poetry-pyinstaller-plugin]
version = "6.7.0"

# disable compression
disable-upx = true

[tool.poetry-pyinstaller-plugin.scripts]
jockey = { source = "src/jockey/__main__.py", type = "onefile", bundle = false }

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
